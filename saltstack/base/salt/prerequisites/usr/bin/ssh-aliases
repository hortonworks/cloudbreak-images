#!/bin/bash

[[ "$TRACE" ]] && set -x

debug() {
  [[ "$DEBUG" ]] && echo "---> $*" 1>&2
}

create_motd() {
  debug "create_motd()"
  FILENAME=/etc/motd
  SIZE=$(du -sb $FILENAME | awk '{ print $1}')

  if [ "$SIZE" -eq 0 ]; then
  cat > /etc/motd <<"EOF"
                    .-.._
              __  /`     '.
           .-'  `/   (   a \
          /      (    \,_   \
         /|       '---` |\ =|
        ` \    /__.-/  /  | |
           |  / / \ \  \   \_\
           |__|_|  |_|__\
=================================================
EOF
  helper_desc >> /etc/motd
  echo >> /etc/motd
  else
    debug "motd already exists";
  fi
}

create_motd_login() {
  debug "create_motd_login"
  cat > /etc/motd-login <<EOF
Please login with one of the following username rather than the user "root":

$(printf '  %-24s : %s\n' $OS_USER  'Reach the host running the ambari')
$(helper_desc)

EOF
}

script_desc() {
  declare desc="Inspect a function's description"
  desc=""
  eval "$(grep desc <${1:? script path is required} | head -1)"; echo $desc
}

helper_desc() {
  for script in $HELPER_DIR/helper-*; do
      name=${script#*helper-}
      printf "  %-24s : %s\n" "$name" "$(script_desc $script)"
  done
}

link_helpers() {
  debug "link_helpers()"
}

fix_root_ssh() {
  debug "fix_root_ssh()"
  sed -i 's#command=".*" ssh-rsa#command="cat /etc/motd-login;sleep 5" ssh-rsa#' /root/.ssh/authorized_keys
}

main() {
  : ${DEBUG:=1}
  : ${OS_USER:=cloudbreak}
  : ${HELPER_DIR:=/usr/bin}

  [[ "$TRACE" ]] && set -x

  case "$1" in
      -h)
        cat <<EOF
Usage:
    setup:   copies helper scripts, create links, motd file
    create:  creates ssh alias users for each helper script
EOF
        ;;
      *)
        fix_root_ssh
        link_helpers
        create_motd
        create_motd_login
        ;;
    esac
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"
