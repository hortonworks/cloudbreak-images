policy_module(cdp-ipahealthagent, 1.0.0)

gen_require(`
    type bin_t, shell_exec_t, usr_t, var_log_t, ipa_var_lib_t, tmp_t, passwd_file_t, default_t, tmp_t;
    type unreserved_port_t, cert_t, devlog_t, http_port_t, httpd_config_t, kerberos_port_t, kernel_t;
    type krb5_conf_t, krb5_keytab_t, ldap_port_t, ldconfig_exec_t, net_conf_t, node_t, sssd_public_t;
    type sssd_var_lib_t, syslogd_var_run_t, proc_net_t, cron_log_t, fs_t, cdp_salt_bin_t, cdp_salt_lib_t;
    class file { execute map read write open create getattr unlink ioctl };
    class dir { read search open add_name remove_name write };
    class tcp_socket { getattr name_bind };
')

gen_require(`
    type cdp_ipahealthagent_t;
    type cdp_ipahealthagent_exec_t;
')
init_daemon_domain(cdp_ipahealthagent_t, cdp_ipahealthagent_exec_t)

type_transition init_t cdp_ipahealthagent_exec_t:process cdp_ipahealthagent_t;
allow init_t cdp_ipahealthagent_exec_t:file { read open execute map };

# Allow execution
allow cdp_ipahealthagent_t bin_t:file { execute execute_no_trans map };
allow cdp_ipahealthagent_t shell_exec_t:file { execute execute_no_trans map };

# Allow script execution
allow cdp_ipahealthagent_t usr_t:file { execute map };

# Allow log writing
allow cdp_ipahealthagent_t var_log_t:file { create open write getattr append };
allow cdp_ipahealthagent_t var_log_t:dir { search write add_name };

# Allow access to IPA certs
allow cdp_ipahealthagent_t ipa_var_lib_t:dir search;
allow cdp_ipahealthagent_t ipa_var_lib_t:file { read getattr };

gen_require(`
    type cdp_ipahealthagent_cert_t;
')
allow cdp_ipahealthagent_t cdp_ipahealthagent_cert_t:file { read getattr open };

# /etc/passwd
allow cdp_ipahealthagent_t passwd_file_t:file { open read getattr };

# If using default_t temporarily
allow cdp_ipahealthagent_t default_t:dir { search read open };
allow cdp_ipahealthagent_t default_t:file { read open getattr execute };

# Socket operations
allow cdp_ipahealthagent_t self:tcp_socket { create setopt listen ioctl bind name_bind };

# Temp file handling
allow cdp_ipahealthagent_t tmp_t:dir { search write add_name remove_name };
allow cdp_ipahealthagent_t tmp_t:file { create open read write unlink };
files_tmp_filetrans(cdp_ipahealthagent_t, tmp_t, file)

# Allow getattr on tcp_socket to self
allow cdp_ipahealthagent_t self:tcp_socket getattr;

# Assuming port_type is unreserved_port_t, explicitly allow:
allow cdp_ipahealthagent_t unreserved_port_t:tcp_socket name_bind;

# Allow ioctl on files labeled default_t (for the .py and .egg-info files)
allow cdp_ipahealthagent_t default_t:file ioctl;

# Declare the port type
type cdp_ipahealthagent_port_t;
corenet_port(cdp_ipahealthagent_port_t)

# Allow binding to that port
allow cdp_ipahealthagent_t cdp_ipahealthagent_port_t:tcp_socket name_bind;
allow cdp_ipahealthagent_t self:tcp_socket create_stream_socket_perms;

#============= cdp_ipahealthagent_t ==============
allow cdp_ipahealthagent_t cert_t:dir search;
allow cdp_ipahealthagent_t cert_t:file { getattr open read };
allow cdp_ipahealthagent_t cert_t:lnk_file read;
allow cdp_ipahealthagent_t default_t:dir { add_name create remove_name write };

allow cdp_ipahealthagent_t default_t:file { append create rename unlink write map };
allow cdp_ipahealthagent_t devlog_t:lnk_file read;
allow cdp_ipahealthagent_t devlog_t:sock_file write;
allow cdp_ipahealthagent_t http_port_t:tcp_socket name_connect;
allow cdp_ipahealthagent_t httpd_config_t:dir search;
allow cdp_ipahealthagent_t kerberos_port_t:tcp_socket name_connect;
allow cdp_ipahealthagent_t kernel_t:unix_dgram_socket sendto;
allow cdp_ipahealthagent_t krb5_conf_t:file { getattr open read };
allow cdp_ipahealthagent_t krb5_keytab_t:file { lock open read };
allow cdp_ipahealthagent_t ldap_port_t:tcp_socket name_connect;

allow cdp_ipahealthagent_t ldconfig_exec_t:file { execute execute_no_trans open read map };
allow cdp_ipahealthagent_t net_conf_t:file { getattr open read };
allow cdp_ipahealthagent_t node_t:tcp_socket node_bind;
allow cdp_ipahealthagent_t node_t:udp_socket node_bind;
allow cdp_ipahealthagent_t self:netlink_route_socket { bind create getattr nlmsg_read };
allow cdp_ipahealthagent_t self:udp_socket { bind connect create getattr getopt setopt };
allow cdp_ipahealthagent_t self:unix_dgram_socket { connect create };
allow cdp_ipahealthagent_t sssd_public_t:dir search;
allow cdp_ipahealthagent_t sssd_public_t:file { open read };
allow cdp_ipahealthagent_t sssd_var_lib_t:dir search;
allow cdp_ipahealthagent_t syslogd_var_run_t:dir search;
allow cdp_ipahealthagent_t tmp_t:file setattr;

allow cdp_ipahealthagent_t proc_net_t:file { open read getattr };
allow cdp_ipahealthagent_t self:netlink_tcpdiag_socket { create setopt bind getattr };

allow cdp_ipahealthagent_t cron_log_t:file { open read };

allow cdp_ipahealthagent_t fs_t:filesystem associate;
allow cdp_ipahealthagent_t self:dir { add_name create remove_name write };
allow cdp_ipahealthagent_t self:file { execute map rename unlink };

allow cdp_ipahealthagent_t cdp_salt_bin_t:dir { getattr search };
allow cdp_ipahealthagent_t cdp_salt_lib_t:dir { getattr open read search };
allow cdp_ipahealthagent_t cdp_salt_lib_t:file { getattr ioctl open read };