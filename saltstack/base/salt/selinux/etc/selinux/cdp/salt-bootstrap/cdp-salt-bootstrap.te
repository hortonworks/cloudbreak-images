policy_module(cdp-salt-bootstrap, 1.0.0)

########################################
#
# Declarations, domain setup
#

require {
    type cdp_salt_bootstrap_t, cdp_salt_bootstrap_exec_t;
}
init_daemon_domain(cdp_salt_bootstrap_t, cdp_salt_bootstrap_exec_t)

########################################
#
# cdp-salt-bootstrap local policy
#
allow cdp_salt_bootstrap_t self:fifo_file rw_fifo_file_perms;
allow cdp_salt_bootstrap_t self:unix_stream_socket create_stream_socket_perms;

require {
    type cdp_salt_bootstrap_etc_t, cdp_salt_bootstrap_cert_t;
}
search_dirs_pattern(cdp_salt_bootstrap_t, cdp_salt_bootstrap_etc_t, cdp_salt_bootstrap_etc_t)
search_dirs_pattern(cdp_salt_bootstrap_t, cdp_salt_bootstrap_cert_t, cdp_salt_bootstrap_cert_t)
read_files_pattern(cdp_salt_bootstrap_t, cdp_salt_bootstrap_etc_t, cdp_salt_bootstrap_etc_t)
read_files_pattern(cdp_salt_bootstrap_t, cdp_salt_bootstrap_cert_t, cdp_salt_bootstrap_cert_t)

require {
    type cdp_salt_bootstrap_log_t, var_log_t;
}
manage_dirs_pattern(cdp_salt_bootstrap_t, var_log_t, cdp_salt_bootstrap_log_t)
manage_files_pattern(cdp_salt_bootstrap_t, var_log_t, cdp_salt_bootstrap_log_t)
logging_log_filetrans(cdp_salt_bootstrap_t, cdp_salt_bootstrap_log_t, file)

domain_use_interactive_fds(cdp_salt_bootstrap_t)

files_read_etc_files(cdp_salt_bootstrap_t)

miscfiles_read_localization(cdp_salt_bootstrap_t)

########################################
#
# cdp_salt_bootstrap_port_t, networking
#
require {
    type cdp_salt_bootstrap_port_t;
	class tcp_socket { accept bind connect create getattr getopt listen name_bind name_connect setopt };
}
allow cdp_salt_bootstrap_t cdp_salt_bootstrap_port_t:tcp_socket { name_bind name_connect };
allow cdp_salt_bootstrap_t self:tcp_socket { accept bind connect create getattr getopt listen setopt };
corenet_tcp_bind_generic_node(cdp_salt_bootstrap_t)
corenet_tcp_bind_all_ephemeral_ports(cdp_salt_bootstrap_t)
corenet_tcp_connect_all_ephemeral_ports(cdp_salt_bootstrap_t)
dev_read_sysfs(cdp_salt_bootstrap_t)
kernel_read_net_sysctls(cdp_salt_bootstrap_t)
kernel_search_network_sysctl(cdp_salt_bootstrap_t)

########################################
#
# Child processes: chage
#
usermanage_domtrans_passwd(cdp_salt_bootstrap_t)

########################################
#
# Child processes: useradd
#
usermanage_check_exec_useradd(cdp_salt_bootstrap_t)
usermanage_domtrans_useradd(cdp_salt_bootstrap_t)

########################################
#
# Child processes: systemctl (and implicit definition of domain cdp_salt_bootstrap_systemctl_t)
#
systemd_systemctl_domain(cdp_salt_bootstrap)

fs_getattr_xattr_fs(cdp_salt_bootstrap_systemctl_t)
kernel_read_proc_files(cdp_salt_bootstrap_systemctl_t)
systemd_config_generic_services(cdp_salt_bootstrap_systemctl_t)

########################################
#
# Child processes: cp, grep, mv, ps (all executed in the domain cdp_salt_bootstrap_unconfined_t)
#
require {
    type cdp_salt_bootstrap_unconfined_t;
}
role system_r types cdp_salt_bootstrap_unconfined_t;
domain_type(cdp_salt_bootstrap_unconfined_t)
unconfined_domain(cdp_salt_bootstrap_unconfined_t)

corecmd_bin_domtrans(cdp_salt_bootstrap_t, cdp_salt_bootstrap_unconfined_t)
corecmd_bin_entry_type(cdp_salt_bootstrap_unconfined_t)

########################################
#
# Child processes: hostname
#
hostname_domtrans(cdp_salt_bootstrap_t)

########################################
#
# Child processes: sss_cache
#
require {
    type sssd_t;
}
allow sssd_t cdp_salt_bootstrap_t:fifo_file write;

########################################
#
# Child processes: /etc/shadow.backup (accessed from the domain cdp_salt_bootstrap_unconfined_t)
#
auth_etc_filetrans_shadow(cdp_salt_bootstrap_unconfined_t, "shadow.backup")

########################################
#
# /etc/shadow, /etc/shadow.new
#
auth_etc_filetrans_shadow(cdp_salt_bootstrap_t, "shadow.new")
auth_manage_shadow(cdp_salt_bootstrap_t)

########################################
#
# Salt related files
#
require {
    type cdp_salt_etc_t, cdp_salt_cert_t, cdp_salt_srv_t;
    class capability { dac_override dac_read_search };
}
manage_dirs_pattern(cdp_salt_bootstrap_t, cdp_salt_etc_t, cdp_salt_etc_t)
manage_dirs_pattern(cdp_salt_bootstrap_t, cdp_salt_cert_t, cdp_salt_cert_t)
manage_dirs_pattern(cdp_salt_bootstrap_t, cdp_salt_srv_t, cdp_salt_srv_t)
manage_files_pattern(cdp_salt_bootstrap_t, cdp_salt_etc_t, cdp_salt_etc_t)
manage_files_pattern(cdp_salt_bootstrap_t, cdp_salt_cert_t, cdp_salt_cert_t)
manage_files_pattern(cdp_salt_bootstrap_t, cdp_salt_srv_t, cdp_salt_srv_t)
files_etc_filetrans(cdp_salt_bootstrap_t, cdp_salt_etc_t, dir, "salt")
filetrans_pattern(cdp_salt_bootstrap_t, cdp_salt_etc_t, cdp_salt_cert_t, dir, "pki")
files_var_filetrans(cdp_salt_bootstrap_t, cdp_salt_srv_t, file, "errormessages.yaml")
files_var_filetrans(cdp_salt_bootstrap_t, cdp_salt_srv_t, dir, "pillar")
files_var_filetrans(cdp_salt_bootstrap_t, cdp_salt_srv_t, dir, "salt")
files_var_filetrans(cdp_salt_bootstrap_t, cdp_salt_srv_t, file, "salt-state-updater.sh")
files_var_filetrans(cdp_salt_bootstrap_t, cdp_salt_srv_t, file, "stderrcommands.yaml")
allow cdp_salt_bootstrap_t self:capability { dac_override dac_read_search };

########################################
#
# /etc/hostname
#
systemd_hostnamed_manage_config(cdp_salt_bootstrap_t)

########################################
#
# /etc/hosts
#
sysnet_read_config(cdp_salt_bootstrap_t)
sysnet_write_config(cdp_salt_bootstrap_t)

########################################
#
# /etc/sysconfig/network
#
files_rw_etc_files(cdp_salt_bootstrap_t)

########################################
#
# /tmp/*.zip (and possibly its contents unpacked)
#
files_manage_generic_tmp_files(cdp_salt_bootstrap_t)
