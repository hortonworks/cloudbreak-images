#!/usr/bin/env bash

# To see logs execute:
# journalctl -t dhcp-hook

# identifier for journal log
LOG_ID="dhcp-hook"
# set to "true" if logging enabled
LOG_ENABLED="true"

USE_SYSTEMD_CAT=$(command -v systemd-cat && echo "true" || echo "false")
LOGFILE=/var/log/dhcp-hook.log

RUN_FILE=/var/dhcp-hook.run

MAX_RETRY_COUNT=6
SLEEP_INTERVAL_SECONDS=5

log() {
    if [[ "${LOG_ENABLED}" == "true" ]]; then
        if [[ "${USE_SYSTEMD_CAT}" == "true" ]]; then
            echo ${1} | systemd-cat -t "${LOG_ID}"
        fi
        DATE=`date '+%Y-%m-%d %H:%M:%S'`
        echo "${DATE} $@" >> $LOGFILE
    fi
}

set_hostname_from_dns() {
    log "set hostname method: $@"
    REVERSE_DNS=$1
    IP=$2
    search=$3
    log "Reverse DNS for $IP: $REVERSE_DNS"
    FQDN=$(echo "$REVERSE_DNS" | grep -E "(pointer|PTR)" | grep -Eo "([A-Za-z0-9-]+\.)+${search}")
    HOSTNAME=$(echo "$FQDN" | sed "s/\.${search}//g" | sort | head -1)
    if [[ -n "${HOSTNAME// }" ]]; then
        log "Setting hostname to: $HOSTNAME"
        echo $HOSTNAME > /etc/hostname
        hostname -F /etc/hostname
    else
        log "No hostname was found from DNS server for domain ${search}"
    fi
}

get_dig_response_with_answer() {
    local nameserver=$1
    local ip_address=$2
    local search=$3

    dig_lookup=$(dig @${nameserver} -x $ip_address)
    log "Reverse DNS by ${nameserver}: ${dig_lookup}"
    echo "$dig_lookup" | grep -A 1 "ANSWER SECTION" | grep -qc "${search}"
    if [[ $? -eq 0 ]]; then
        echo "$dig_lookup"
        return 0
    fi
    return 1
}

execute_with_retry() {
    local max_retry_count=$MAX_RETRY_COUNT
    local sleep_interval_seconds=$SLEEP_INTERVAL_SECONDS
    local retry_counter=0
    log "execute_with_retry: $@"

    while [ $retry_counter -lt $max_retry_count ]; do
        ((retry_counter++))
        log "retry: attempt $retry_counter with sleep interval ${sleep_interval_seconds}s: $@"
        response=$("$@")
        if [ $? -eq 0 ]; then
            log "retry success"
            echo "$response"
            return 0
        fi
        log "attempt $retry_counter unsuccesful".
        sleep ${sleep_interval_seconds}s
    done
    return 1
}

make_resolv_conf() {
    log "Starting make_resolv_conf on interface: ${interface}"

    if [ -n "${SEARCH}" ]; then
        search="${SEARCH}"
    else
        if [ -n "${new_domain_search}" ]; then
            # Remove instaces of \032 (#450042)
            search="${new_domain_search//\\032/ }"
        elif [ -n "${new_domain_name}" ]; then
            # Note that the DHCP 'Domain Name Option' is really just a domain
            # name, and that this practice of using the domain name option as
            # a search path is both nonstandard and deprecated.
            search="${new_domain_name}"
        fi
    fi

    log "Search set to: ${search}"

    if [ ! -f "$RUN_FILE" ]; then 
        IP=$(ip addr show dev ${interface} | grep  -Po 'inet \K[\d.]+')
        REVERSE_DNS=$(dig -x $IP)
        if [[ $? -eq 0 ]]; then
            set_hostname_from_dns "$REVERSE_DNS" "$IP" "$search"
        else
            log "Failed to get reverse DNS name for $IP, trying directly with DNS servers: ${new_domain_name_servers}"
            for nameserver in ${new_domain_name_servers} ; do
                REVERSE_DNS=$(execute_with_retry get_dig_response_with_answer $nameserver $IP $search)
                if [[ $? -eq 0 ]]; then
                    set_hostname_from_dns "$REVERSE_DNS" "$IP" "$search"
                    break
                else
                    log "$nameserver DNS server didn't return valid result for $IP"
                fi
            done
        fi
        echo "DO NOT DELETE" >> $RUN_FILE
        echo "Run at $(date '+%Y-%m-%d %H:%M:%S')" >> $RUN_FILE
    else
        log "Run file exists, skipping DNS host name setup"
    fi

    log "Cleaning /etc/resolv.conf"
    echo "; generated by /etc/dhcp/dhclient-enter-hooks" > /etc/resolv.conf

    [ ! -f /etc/unbound/conf.d/ ] && mkdir -p /etc/unbound/conf.d/

    log "Initializing /etc/unbound/conf.d/99-default.conf"
    echo "forward-zone:" > /etc/unbound/conf.d/99-default.conf
    echo "  name: \".\"" >> /etc/unbound/conf.d/99-default.conf
    for nameserver in ${new_domain_name_servers} ; do
      echo "  forward-addr: ${nameserver}" >> /etc/unbound/conf.d/99-default.conf
    done

    echo "forward-zone:" >> /etc/unbound/conf.d/99-default.conf
    echo "  name: \"in-addr.arpa.\"" >> /etc/unbound/conf.d/99-default.conf
    for nameserver in ${new_domain_name_servers} ; do
      echo "  forward-addr: ${nameserver}" >> /etc/unbound/conf.d/99-default.conf
    done

    log "Generating configuration for /etc/resolv.conf"
    if [ -n "${search}" ]; then
        echo "search ${search}" >> /etc/resolv.conf
    fi

    if [ -n "${RES_OPTIONS}" ]; then
        echo "options ${RES_OPTIONS}" >> /etc/resolv.conf
    fi

    echo "nameserver 127.0.0.1" >> /etc/resolv.conf

    if [ ! -f /etc/hostname ]; then
        log "Creating new hostname"
        echo $new_host_name > /etc/hostname
        hostname -F /etc/hostname
    fi
    
    log "Restart unbound"
    pkill -SIGHUP unbound

    return 0
}
